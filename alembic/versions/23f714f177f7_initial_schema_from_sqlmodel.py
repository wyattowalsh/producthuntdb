"""Initial schema from SQLModel

Revision ID: 23f714f177f7
Revises: 
Create Date: 2025-10-29 10:49:52.157388

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '23f714f177f7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('crawlstate',
    sa.Column('entity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_timestamp', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('entity')
    )
    op.create_table('topicrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('followersCount', sa.Integer(), nullable=True),
    sa.Column('postsCount', sa.Integer(), nullable=True),
    sa.Column('isFollowing', sa.Boolean(), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topicrow_followersCount'), 'topicrow', ['followersCount'], unique=False)
    op.create_table('userrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('headline', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('twitterUsername', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('websiteUrl', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('isMaker', sa.Boolean(), nullable=True),
    sa.Column('isFollowing', sa.Boolean(), nullable=True),
    sa.Column('isViewer', sa.Boolean(), nullable=True),
    sa.Column('profileImage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('coverImage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userrow_createdAt'), 'userrow', ['createdAt'], unique=False)
    op.create_table('collectionrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tagline', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('coverImage', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('featuredAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('followersCount', sa.Integer(), nullable=False),
    sa.Column('isFollowing', sa.Boolean(), nullable=False),
    sa.Column('userId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collectionrow_followersCount'), 'collectionrow', ['followersCount'], unique=False)
    op.create_table('postrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tagline', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('featuredAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('commentsCount', sa.Integer(), nullable=False),
    sa.Column('votesCount', sa.Integer(), nullable=False),
    sa.Column('reviewsRating', sa.Float(), nullable=False),
    sa.Column('reviewsCount', sa.Integer(), nullable=False),
    sa.Column('isCollected', sa.Boolean(), nullable=False),
    sa.Column('isVoted', sa.Boolean(), nullable=False),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('media_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('productlinks_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_postrow_createdAt'), 'postrow', ['createdAt'], unique=False)
    op.create_table('collectionpostlink',
    sa.Column('collection_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collectionrow.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.PrimaryKeyConstraint('collection_id', 'post_id')
    )
    op.create_table('commentrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parentId', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('body', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('isVoted', sa.Boolean(), nullable=False),
    sa.Column('votesCount', sa.Integer(), nullable=False),
    sa.Column('userId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commentrow_createdAt'), 'commentrow', ['createdAt'], unique=False)
    op.create_index(op.f('ix_commentrow_post_id'), 'commentrow', ['post_id'], unique=False)
    op.create_table('makerpostlink',
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'user_id')
    )
    op.create_table('posttopiclink',
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('topic_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topicrow.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'topic_id')
    )
    op.create_table('voterow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('userId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('comment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['commentrow.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_voterow_createdAt'), 'voterow', ['createdAt'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_voterow_createdAt'), table_name='voterow')
    op.drop_table('voterow')
    op.drop_table('posttopiclink')
    op.drop_table('makerpostlink')
    op.drop_index(op.f('ix_commentrow_post_id'), table_name='commentrow')
    op.drop_index(op.f('ix_commentrow_createdAt'), table_name='commentrow')
    op.drop_table('commentrow')
    op.drop_table('collectionpostlink')
    op.drop_index(op.f('ix_postrow_createdAt'), table_name='postrow')
    op.drop_table('postrow')
    op.drop_index(op.f('ix_collectionrow_followersCount'), table_name='collectionrow')
    op.drop_table('collectionrow')
    op.drop_index(op.f('ix_userrow_createdAt'), table_name='userrow')
    op.drop_table('userrow')
    op.drop_index(op.f('ix_topicrow_followersCount'), table_name='topicrow')
    op.drop_table('topicrow')
    op.drop_table('crawlstate')
    # ### end Alembic commands ###
