"""add_goals_maker_groups_projects_media_and_relationships

Revision ID: 6341e70847e4
Revises: 23f714f177f7
Create Date: 2025-10-29 11:17:37.866737

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '6341e70847e4'
down_revision: Union[str, Sequence[str], None] = '23f714f177f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('makergrouprow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tagline', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('membersCount', sa.Integer(), nullable=False),
    sa.Column('goalsCount', sa.Integer(), nullable=False),
    sa.Column('isMember', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_makergrouprow_goalsCount'), 'makergrouprow', ['goalsCount'], unique=False)
    op.create_index(op.f('ix_makergrouprow_membersCount'), 'makergrouprow', ['membersCount'], unique=False)
    op.create_table('makerprojectrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tagline', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lookingForOtherMakers', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goalrow',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('userId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('groupId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('projectId', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('createdAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dueAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('completedAt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('currentUntil', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('current', sa.Boolean(), nullable=False),
    sa.Column('cheerCount', sa.Integer(), nullable=False),
    sa.Column('isCheered', sa.Boolean(), nullable=False),
    sa.Column('focusedDuration', sa.Integer(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['groupId'], ['makergrouprow.id'], ),
    sa.ForeignKeyConstraint(['projectId'], ['makerprojectrow.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goalrow_completedAt'), 'goalrow', ['completedAt'], unique=False)
    op.create_index(op.f('ix_goalrow_createdAt'), 'goalrow', ['createdAt'], unique=False)
    op.create_index(op.f('ix_goalrow_dueAt'), 'goalrow', ['dueAt'], unique=False)
    op.create_index(op.f('ix_goalrow_groupId'), 'goalrow', ['groupId'], unique=False)
    op.create_index(op.f('ix_goalrow_userId'), 'goalrow', ['userId'], unique=False)
    op.create_table('makergroupmemberlink',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('group_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['makergrouprow.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('userfollowinglink',
    sa.Column('follower_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('following_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['userrow.id'], ),
    sa.ForeignKeyConstraint(['following_id'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'following_id')
    )
    op.create_table('usertopicfollowlink',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('topic_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topicrow.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'topic_id')
    )
    op.create_table('mediarow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('videoUrl', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['postrow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mediarow_post_id'), 'mediarow', ['post_id'], unique=False)
    op.create_table('usercollectionfollowlink',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('collection_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collectionrow.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['userrow.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'collection_id')
    )
    op.add_column('postrow', sa.Column('thumbnail_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('postrow', sa.Column('thumbnail_videoUrl', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('postrow', 'media_json')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('postrow', sa.Column('media_json', sa.VARCHAR(), nullable=True))
    op.drop_column('postrow', 'thumbnail_videoUrl')
    op.drop_column('postrow', 'thumbnail_type')
    op.drop_table('usercollectionfollowlink')
    op.drop_index(op.f('ix_mediarow_post_id'), table_name='mediarow')
    op.drop_table('mediarow')
    op.drop_table('usertopicfollowlink')
    op.drop_table('userfollowinglink')
    op.drop_table('makergroupmemberlink')
    op.drop_index(op.f('ix_goalrow_userId'), table_name='goalrow')
    op.drop_index(op.f('ix_goalrow_groupId'), table_name='goalrow')
    op.drop_index(op.f('ix_goalrow_dueAt'), table_name='goalrow')
    op.drop_index(op.f('ix_goalrow_createdAt'), table_name='goalrow')
    op.drop_index(op.f('ix_goalrow_completedAt'), table_name='goalrow')
    op.drop_table('goalrow')
    op.drop_table('makerprojectrow')
    op.drop_index(op.f('ix_makergrouprow_membersCount'), table_name='makergrouprow')
    op.drop_index(op.f('ix_makergrouprow_goalsCount'), table_name='makergrouprow')
    op.drop_table('makergrouprow')
    # ### end Alembic commands ###
